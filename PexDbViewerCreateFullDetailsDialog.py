"""Subclass of CreateFullDetailsDialog, which is generated by wxFormBuilder."""

import wx
import GeneratedGUI
import creators as cr
from PersistClasses import *


# Implementing CreateFullDetailsDialog
class PexDbViewerCreateFullDetailsDialog( GeneratedGUI.CreateFullDetailsDialog ):
	def __init__( self, parent, dbfact, project, printer, extruder):
		GeneratedGUI.CreateFullDetailsDialog.__init__( self, parent )
		self._fact = dbfact
		self._project = project
		self._printer = printer
		self._extruder = extruder
		self._sequence = cr.CreaSequenceEnum.LINEAR


	def _get_sequence(self):
		idx = self.m_sequenceCHOI.GetSelection()
		if idx != wx.NOT_FOUND:
			if idx == 0:
				return cr.CreaSequenceEnum.LINEAR
			elif idx == 1:
				return cr.CreaSequenceEnum.MIXED
			else:
				raise Exception("Unknown sequence!")


	def _get_repetions(self):
		reps = self.m_repetitionsSPCTRL.GetValue()
		if reps == 0:
			reps = 1

		return reps

	def _get_planneddt(self):
		wxdt = self.m_datePicker1.GetValue()

		if wxdt.IsValid():
			return datetime(wxdt.year, wxdt.month+1, wxdt.day)
		else:
			return None

	def m_sdbSizer6OnOKButtonClick(self, event):
		"""User clicked OK which measn we have to do the creation now"""
		self._sequence = self._get_sequence()
		self._repetitions = self._get_repetions()
		self._planneddt = self._get_planneddt()
		self._do_create()
		self.EndModal(wx.ID_OK)

	def _do_create(self):
		q = sqp.SQQuery(self._fact, ProjectFactorPreparation).where(ProjectFactorPreparation.ProjectId==self._project._id).select(lambda prep : prep._id)
		prpct = len(list(q))

		if prpct==0:
			wx.MessageBox("Please define some factor preparations by editing the project")
			return

		crea = cr.CreaFullFactorial(self._fact, 
			self._project, 
			self._printer, 
			self._extruder,
			self._sequence,
			self._planneddt,
			self._repetitions)

		self.numexps = crea.create()

	



