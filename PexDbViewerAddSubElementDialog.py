"""Subclass of AddSubElementDialog, which is generated by wxFormBuilder."""

import wx
import GeneratedGUI
import sqlitepersist as sqp
from sqlitepersist.SQLitePersistBasicClasses import PBase
from PersistClasses import *

# Implementing AddSubElementDialog
class PexDbViewerAddSubElementDialog( GeneratedGUI.AddSubElementDialog ):

	def __init__( self, parent, fact : sqp.SQFactory, presentthese : sqp.SQQuery, objname):
		GeneratedGUI.AddSubElementDialog.__init__( self, parent)
		self._fact = fact
		self._pres_q = presentthese
		self._selected = None
		self._objectlist = []
		self._oname = objname

	@property
	def selected(self):
		return self._selected

	def AddSubElementDialogOnInitDialog(self, event):
		tit = self.GetTitle()
		self.SetTitle(tit.format(self._oname))
		lheading = self.m_listHeadingSTXT.GetLabel()
		self.m_listHeadingSTXT.SetLabel(lheading.format(self._oname))

	def AddSubElementDialogOnShow(self, event):
		if event.Show is False:
			return

		self.m_objectsLLCTR
		self.m_objectsLLCTR.ClearAll()
		self.m_objectsLLCTR.InsertColumn(0, "Name")
		self.m_objectsLLCTR.InsertColumn(1, "Unit")
		self._objectlist = list(self._pres_q)
		ct = 0
		for obj in self._objectlist:
			idx = self.m_objectsLLCTR.InsertItem(self.m_objectsLLCTR.GetColumnCount(), obj.name)
			self.m_objectsLLCTR.SetItemData(idx, ct)
			self.m_objectsLLCTR.SetItem(idx, 1, self._get_unit_str(obj.unit))
			ct += 1


	def _get_unit_str(self, uni : Unit) -> str:
		if uni is None:
			return "-unitless-"
		elif type(uni) is Unit:
			return uni.abbreviation
		else:
			raise Exception("argument type must be none or of type Unit")

	def dook(self):
		selidx = self.m_objectsLLCTR.GetFirstSelected()
		if selidx == wx.NOT_FOUND:
			wx.MessageBox("Please select a {} in the list".format(self._oname))
			return
		
		idx = self.m_objectsLLCTR.GetItemData(selidx)
		self._selected = self._objectlist[idx]
		self.EndModal(wx.ID_OK)

	def m_sdbSizer3OnOKButtonClick(self, event):
		self.dook()

	def m_objectsLLCTROnListItemDeselected(self, event):
		self.m_sdbSizer3OK.Enable()


	def m_objectsLLCTROnListItemDeselected(self, event):
		self.m_sdbSizer3OK.Enable(False)

	def m_objectsLLCTROnLeftDClick(self, event):
		self.dook()